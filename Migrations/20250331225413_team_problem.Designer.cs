// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NucpaBalloonsApi;

#nullable disable

namespace NucpaBalloonsApi.Migrations
{
    [DbContext(typeof(NucpaDbContext))]
    [Migration("20250331225413_team_problem")]
    partial class team_problem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.AdminSettings", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeforcesApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeforcesApiSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AdminSettings");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.BalloonRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BalloonColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PickedUpAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickedUpBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemIndex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TeamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId")
                        .IsUnique();

                    b.HasIndex("TeamId");

                    b.ToTable("BalloonRequests");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.ProblemBalloonMap", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminSettingsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BalloonColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemIndex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminSettingsId");

                    b.ToTable("ProblemBalloonMaps");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminSettingsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdminSettingsId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.Team", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminSettingsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodeforcesHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AdminSettingsId");

                    b.HasIndex("CodeforcesHandle")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.BalloonRequest", b =>
                {
                    b.HasOne("NucpaBalloonsApi.Models.SystemModels.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.ProblemBalloonMap", b =>
                {
                    b.HasOne("NucpaBalloonsApi.Models.SystemModels.AdminSettings", "AdminSettings")
                        .WithMany("ProblemBalloonMaps")
                        .HasForeignKey("AdminSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminSettings");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.Room", b =>
                {
                    b.HasOne("NucpaBalloonsApi.Models.SystemModels.AdminSettings", "AdminSettings")
                        .WithMany("Rooms")
                        .HasForeignKey("AdminSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminSettings");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.Team", b =>
                {
                    b.HasOne("NucpaBalloonsApi.Models.SystemModels.AdminSettings", "AdminSettings")
                        .WithMany("Teams")
                        .HasForeignKey("AdminSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NucpaBalloonsApi.Models.SystemModels.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminSettings");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NucpaBalloonsApi.Models.SystemModels.AdminSettings", b =>
                {
                    b.Navigation("ProblemBalloonMaps");

                    b.Navigation("Rooms");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
